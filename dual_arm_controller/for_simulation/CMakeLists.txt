cmake_minimum_required(VERSION 3.4)
project(franka_example_controllers)

set(CMAKE_BUILD_TYPE Release)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)


find_package(catkin REQUIRED COMPONENTS
  controller_interface
  dynamic_reconfigure
  eigen_conversions
  franka_hw
  franka_gripper
  geometry_msgs
  hardware_interface
  joint_limits_interface
  tf
  tf_conversions
  message_generation
  pluginlib
  realtime_tools
  roscpp
  rospy
  urdf
  visualization_msgs
)

find_package(Eigen3 REQUIRED)
find_package(Franka 0.9.0 QUIET)
find_package(Franka)
if(NOT Franka_FOUND)
  find_package(Franka 0.8.0 REQUIRED)
endif()

# merge Franka + INCLUDE_DIRS in topological order
list_insert_in_workspace_order(catkin_INCLUDE_DIRS ${Franka_INCLUDE_DIRS} ${catkin_INCLUDE_DIRS})

add_message_files(FILES
  JointTorqueComparison.msg
)

generate_messages()

generate_dynamic_reconfigure_options(
  cfg/compliance_param.cfg
  cfg/desired_mass_param.cfg
  cfg/dual_arm_compliance_param.cfg
  cfg/teleop_param.cfg
  cfg/teleop_gripper_param.cfg
)

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES franka_example_controllers
  CATKIN_DEPENDS
    controller_interface
    dynamic_reconfigure
    eigen_conversions
    franka_hw
    franka_gripper
    geometry_msgs
    hardware_interface
    joint_limits_interface
    tf
    tf_conversions
    message_runtime
    pluginlib
    realtime_tools
    roscpp
    urdf
    visualization_msgs
  DEPENDS Franka
)

add_library(franka_example_controllers
  src/elbow_example_controller.cpp
  src/cartesian_pose_example_controller.cpp
  src/cartesian_velocity_example_controller.cpp
  src/joint_position_example_controller.cpp
  src/joint_velocity_example_controller.cpp
  src/model_example_controller.cpp
  src/joint_impedance_example_controller.cpp
  src/cartesian_impedance_example_controller.cpp
  src/cartesian_impedance_example_controller_2.cpp
  src/force_example_controller.cpp
  src/dual_arm_cartesian_impedance_example_controller.cpp
  src/teleop_joint_pd_example_controller.cpp
  src/joint_wall.cpp
  src/examples_common.cpp
  src/cartesian_impedance_example_controller_3.cpp
  src/cartesian_impedance_example_controller_3_l.cpp
  src/joint_position_example_controller_p2p.cpp
  src/cartesian_impedance_example_controller_4.cpp
)




add_library(mogen_p2p_joint SHARED IMPORTED)
set_target_properties(mogen_p2p_joint PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/install/mogen_p2p_joint/libmogen_p2p_joint.so)

add_library(cartesian SHARED IMPORTED)
set_target_properties(cartesian PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/install/cartesian/libcartesian.so)

add_library(cntr_aic SHARED IMPORTED)
set_target_properties(cntr_aic PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/install/cntr_aic/libcntr_aic.so)

add_library(adaptive_cartesian SHARED IMPORTED)
set_target_properties(adaptive_cartesian PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/install/adaptive_cartesian/libadaptive_cartesian.so)

add_dependencies(franka_example_controllers
  ${${PROJECT_NAME}_EXPORTED_TARGETS}
  ${catkin_EXPORTED_TARGETS}
  ${PROJECT_NAME}_generate_messages_cpp
  ${PROJECT_NAME}_gencpp
  ${PROJECT_NAME}_gencfg
)

target_link_libraries(franka_example_controllers PUBLIC
  ${Franka_LIBRARIES}
  PRIVATE mogen_p2p_joint
  PRIVATE cntr_aic
  PRIVATE cartesian
  PRIVATE adaptive_cartesian
  ${catkin_LIBRARIES}
)

target_include_directories(franka_example_controllers SYSTEM PUBLIC
  ${EIGEN3_INCLUDE_DIRS}
  ${catkin_INCLUDE_DIRS}
)
target_include_directories(franka_example_controllers PUBLIC
  include
)
target_include_directories(mogen_p2p_joint INTERFACE ${CMAKE_SOURCE_DIR}/install/mogen_p2p_joint/)
target_include_directories(cntr_aic INTERFACE ${CMAKE_SOURCE_DIR}/install/cntr_aic/)
target_include_directories(cartesian INTERFACE ${CMAKE_SOURCE_DIR}/install/cartesian/)
target_include_directories(adaptive_cartesian INTERFACE ${CMAKE_SOURCE_DIR}/install/adaptive_cartesian/)

add_executable(teleop_gripper_node
  src/teleop_gripper_node.cpp
)

target_include_directories(teleop_gripper_node PUBLIC
  ${catkin_INCLUDE_DIRS}
)


target_link_libraries(teleop_gripper_node PUBLIC
  ${Franka_LIBRARIES}
  ${catkin_LIBRARIES}
)


add_dependencies(teleop_gripper_node
  ${${PROJECT_NAME}_EXPORTED_TARGETS}
  ${catkin_EXPORTED_TARGETS}
  ${PROJECT_NAME}_generate_messages_cpp
  ${PROJECT_NAME}_gencpp
  ${PROJECT_NAME}_gencfg
)

## Installation
install(TARGETS franka_example_controllers
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)



install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
)
install(DIRECTORY launch
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)
install(DIRECTORY config
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)
install(FILES franka_example_controllers_plugin.xml
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)
catkin_install_python(
  PROGRAMS scripts/interactive_marker.py scripts/move_to_start.py scripts/dual_arm_interactive_marker.py
  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

## Tools
include(${CMAKE_CURRENT_LIST_DIR}/../cmake/ClangTools.cmake OPTIONAL
  RESULT_VARIABLE CLANG_TOOLS
)
if(CLANG_TOOLS)
  file(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
  file(GLOB_RECURSE HEADERS
    ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h
    ${CMAKE_CURRENT_SOURCE_DIR}/src/*.h
  )
  add_format_target(franka_example_controllers FILES ${SOURCES} ${HEADERS})
  add_tidy_target(franka_example_controllers
    FILES ${SOURCES}
    DEPENDS franka_example_controllers
  )
endif()

include(${CMAKE_CURRENT_LIST_DIR}/../cmake/PepTools.cmake OPTIONAL
  RESULT_VARIABLE PEP_TOOLS
)
if(PEP_TOOLS)
  file(GLOB_RECURSE PYSOURCES ${CMAKE_CURRENT_SOURCE_DIR}/scripts/*.py)
  add_pyformat_target(franka_control FILES ${PYSOURCES})
endif()
